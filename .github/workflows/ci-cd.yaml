name: GitHub Actions Build and Deploy Demo
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  IMAGE_TAG: ${{ ((github.ref == 'refs/heads/master') || (startsWith(github.ref, 'refs/heads/bugfix'))) && 'production' || 'feature' }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Echo variable
        run: |
          echo $GITHUB_REF_NAME
          echo $GITHUB_REF
          echo runner.os
          echo github.ref.name
    

    
    
      - name: Commit id variable
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - name: Trigger Webhook
        run: |
           curl -X POST -H 'Content-Type: application/json' -d '{commitId:123}' http://rancher-ui.northcentralus.cloudapp.azure.com:8080/generic-webhook-trigger/invoke?token=testPipeline



          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
        
      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Production Image
        uses: docker/build-push-action@v2
        if: ${{ env.IMAGE_TAG == 'production' }}
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/github-actions:${{ env.IMAGE_TAG}}-${{ steps.vars.outputs.sha_short }},${{ secrets.DOCKER_USERNAME }}/github-actions:${{ env.IMAGE_TAG}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build and push Feature Image
        uses: docker/build-push-action@v2
        if: ${{ env.IMAGE_TAG != 'production' }}
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/github-actions:${{ env.IMAGE_TAG}}-${{ steps.vars.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  
  
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  
    
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  # docker-build-witch-cache:
  #   uses: ahmetsaz/github-actions-demo/.github/workflows/docker-build-template.yml@master
  #   with:
  #     image_name: github-actions
  #     tag: latest
  #   secrets:
  #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  # docker-build-with-no-cache:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
        
  #     - name: Docker Login
  #       uses: docker/login-action@v2.0.0
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Docker Build & Push
  #       run: |
  #         cd app
  #         docker build -t ${{ secrets.DOCKER_USERNAME }}/github-actions:${{ github.sha }} .
  #         docker push ${{ secrets.DOCKER_USERNAME }}/github-actions:${{ github.sha }}
    

  # kubernetes-test-deployment:
  #   needs: docker-build
  #   uses: ahmetsaz/github-actions-demo/.github/workflows/kubernetes-deployment.yml@master
  #   with:
  #     image_name: github-actions
  #     tag: $GITHUB_RUN_NUMBER
  #     environment: test
  #   secrets:
  #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #     KUBECONFIG: ${{ secrets.KUBECONFIG }}

  # kubernetes-prod-deployment:
  #   needs: [docker-build,kubernetes-test-deployment]
  #   uses: ahmetsaz/github-actions-demo/.github/workflows/kubernetes-deployment.yml@master
  #   with:
  #     image_name: github-actions
  #     tag: $GITHUB_RUN_NUMBER
  #     environment: prod
  #   secrets:
  #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #     KUBECONFIG: ${{ secrets.KUBECONFIG }}
      
    
  # docker-build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
        
  #     - name: Docker Login
  #       uses: docker/login-action@v2.0.0
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Docker Build & Push
  #       run: |
  #         cd app
  #         docker build -t ${{ secrets.DOCKER_USERNAME }}/github-actions:${{ github.sha }} .
  #         docker push ${{ secrets.DOCKER_USERNAME }}/github-actions:${{ github.sha }}
  
  # deploy-to-test:
  #   runs-on: ubuntu-latest
  #   environment: test
  #   needs: docker-build
  #   steps:
  #   - name: Set Context
  #     uses: azure/k8s-set-context@v2
  #     with:
  #        method: kubeconfig
  #        kubeconfig: ${{ secrets.KUBECONFIG }}
         
  #   - name: Set Image
  #     run: |
  #       kubectl --namespace=default set image deployment/demo-app github-actions=${{ secrets.DOCKER_USERNAME }}/github-actions:${{ github.sha }} 
   

      
